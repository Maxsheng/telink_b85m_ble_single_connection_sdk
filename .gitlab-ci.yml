stages:
  - genLicense
  - checkLicense
  - build
  - clean_build
  - plainPW_check
  - misspellChecking 

genLicense:
  variables:
    CODE_COMPILE_ARCH: 'TC32'
    COV_PF_CATALOG: 'BLE'
  stage: genLicense
  before_script:
  script:
    - date
    - generat_license_list
    - date
  artifacts:
    paths:
    - "license_list_gen.txt"
    - "no_license_list_gen.txt"
    - "mismatch_license_file_gen.txt"
  when: manual
  
checkLicense:
  variables:
    CODE_COMPILE_ARCH: 'TC32'
    COV_PF_CATALOG: 'BLE'
  stage: checkLicense
  allow_failure: yes
  before_script:
  script:
    - date
    - check_license
    #- generat_license_list # For no license files
    - date
  artifacts:
    when: always
    paths:
    - "mismatch_license.txt"
    - "no_license*.txt"
    - "unknow_type_file.txt"

build:
  stage: build
  tags:
    - LINUX
    - TC32
  before_script:
  script:
    - which tc32-elf-gcc
    - chmod +x b85_ble_sdk/*.sh
    - date
    - $TC32_ECLIPSE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import ./b85_ble_sdk/  -cleanBuild $ECLIPSE_PROJECT/$ECLIPSE_BUILD_TARGET
    - date

  artifacts:
    paths:
    - "b85_ble_sdk/825x_ble_remote/*.bin"
    - "b85_ble_sdk/825x_ble_remote/*.lst"
    - "b85_ble_sdk/825x_ble_remote/*.elf"

clean_build:
  stage: clean_build
  tags:
    - LINUX
    - TC32
  script:
    - ls -a
    - rm -r * .git*
    - ls -a
  when: always
  
plainPW_check:
  stage: plainPW_check 
  script:
    - echo "Enter Plain Password checking stage"
    - check_plain_weak_password | tee result.txt
    - ls -l result.txt
    - echo "Error List:"
    - cat result.txt
  artifacts:
    paths:
    - result.txt
  when: manual

misspellChecking:
  stage: misspellChecking
  tags:
    - LINUX
  script:
    - echo "--------------- Begin ------------------------"
    - misspell-check
    - echo "---------------- End -----------------------"
  artifacts:
    paths:
    - misspell_result.txt 

